generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

//criar migration: npx prisma migrate dev
model Empresa {
  idempresa String @id @default(uuid())
  nome String @db.VarChar(200)
  cnpj String @db.VarChar(14)
  endereco String? @db.VarChar(200)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  usuarios Usuario[]

  @@map("empresa")
}

model Usuario {
  idusuario String @id @default(uuid())
  nome String @db.VarChar(200) 
  login String @db.VarChar(100) 
  email String? @db.VarChar(200) 
  senha String @db.VarChar(100)
  idempresa String
  
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  empresa Empresa @relation(fields: [idempresa], references: [idempresa])
  funcionarios Funcionario[]

  @@map("usuario")
}

model Departamento{
  iddepartamento String @id @default(uuid())
  descricao String @db.VarChar(200)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  funcionarios Funcionario[]
  cargos Cargo[]

  @@map("departamento")
}

model Cargo{
  idcargo String @id @default(uuid())
  nome String @db.VarChar(200)
  salariobase Decimal @db.Decimal(18,5)
  iddepartamento String

  departamento Departamento @relation(fields: [iddepartamento], references: [iddepartamento])
  funcionarios Funcionario[]

  @@map("cargo")
}

model Funcionario{
  idfuncionario String @id @default(uuid())
  codigo Int
  nome String @db.VarChar(200)
  iddepartamento String
  idcargo String
  categoria Int 
  dataadmissao DateTime
  idusuariocadastro String

  departamento Departamento @relation(fields: [iddepartamento], references: [iddepartamento])
  usuario Usuario @relation(fields: [idusuariocadastro], references: [idusuario])
  cargo Cargo @relation(fields: [idcargo], references: [idcargo])

  folhapagamento FolhaPagamento[]

  @@map("funcionario")
}

model Beneficios{
  idbeneficio String @id @default(uuid())
  valetransporte Decimal? @db.Decimal(18,5)
  valealimentacao Decimal? @db.Decimal(18,5)
  salariofamilia Decimal? @db.Decimal(18,5)
  auxiliocreche Decimal? @db.Decimal(18,5)
  diariasparaviagens Decimal? @db.Decimal(18,5)
  descansoremunerado Decimal? @db.Decimal(18,5)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  folhapagamento FolhaPagamento[]

  @@map("beneficios")
}

model Adicionais{
  idadicional String @id @default(uuid())
  periculosidade Decimal? @db.Decimal(18,5)
  noturno Decimal? @db.Decimal(18,5)
  insalubridade Decimal? @db.Decimal(18,5)
  tempodeservico Decimal? @db.Decimal(18,5)
  valorhorasextras Decimal? @db.Decimal(18,5)
  adiantamento Decimal? @db.Decimal(18,5)
  percentualcomissao Decimal? @db.Decimal(18,5)
  comissao Decimal? @db.Decimal(18,5)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  folhapagamento FolhaPagamento[]

  @@map("adicionais")
}

model HorasTrabalhadas{
  idhorastrabalhadas String @id @default(uuid())
  horastrabalhadas DateTime? @db.Time()
  horasausentes Decimal? @db.Decimal(18,5)
  horasextras Decimal? @db.Decimal(18,5)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  folhapagamento FolhaPagamento[]

  @@map("horas")
}

model Descontos{
  iddesconto String @id @default(uuid())
  inss Decimal? @db.Decimal(18,5)
  fgts Decimal? @db.Decimal(18,5)
  irrf Decimal? @db.Decimal(18,5)
  valorhorasausentes Decimal? @db.Decimal(18,5)
  contribuicaosindical  Decimal? @db.Decimal(18,5)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  folhapagamento FolhaPagamento[]

  @@map("descontos")
}

model FolhaPagamento{
  idfolhapagamento String @id @default(uuid())
  idfuncionario String
  idbeneficios String
  idadicionais String
  iddescontos String
  idhorastrabalhadas String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  funcionario Funcionario @relation(fields: [idfuncionario], references: [idfuncionario])
  beneficios Beneficios @relation(fields: [idbeneficios], references: [idbeneficio])
  adicionais Adicionais @relation(fields: [idadicionais], references: [idadicional])
  descontos Descontos @relation(fields: [iddescontos], references: [iddesconto])
  horastrabalhadas HorasTrabalhadas @relation(fields: [idhorastrabalhadas], references: [idhorastrabalhadas])

  @@map("folhapagamento")
}